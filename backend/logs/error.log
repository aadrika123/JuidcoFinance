{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-19T12:36:54.414Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-20T06:44:16.505Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:63:46\n\n  60 const limit: number = Number(req.query.limit);\n  61 const page: number = Number(req.query.page);\n  62 try {\n→ 63   const data = await prisma.audit_trails.findMany({\n         skip: NaN,\n       + take: Int\n       })\n\nArgument `take` is missing.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T07:13:09.722Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-20T08:15:41.924Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"(\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T11:40:01.918Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"(\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T11:40:55.016Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"(\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T11:42:07.736Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"(\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T14:04:08.835Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"6\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T14:07:47.623Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"6\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-20T14:10:56.468Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"month_year\" does not exist`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T05:23:20.706Z"}
{"level":"error","message":"Do not know how to serialize a BigInt","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T05:27:26.745Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:34.983Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:41.801Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:45.619Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:47.917Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:50.366Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:52.645Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:54.964Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:57.118Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:52:59.265Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:53:02.093Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T05:53:04.686Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"asc\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T05:57:32.142Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"audit_trails.created_at\" must appear in the GROUP BY clause or be used in an aggregate function`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:00:53.898Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"audit_trails.created_at\" must appear in the GROUP BY clause or be used in an aggregate function`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:00:58.297Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"audit_trails.created_at\" must appear in the GROUP BY clause or be used in an aggregate function`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:02:54.886Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"GROUP\"`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:03:27.199Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"audit_trails.created_at\" must appear in the GROUP BY clause or be used in an aggregate function`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:04:40.738Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"audit_trails.created_at\" must appear in the GROUP BY clause or be used in an aggregate function`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:05:18.282Z"}
{"level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function to_varchar(timestamp without time zone, unknown) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.`","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:09:34.252Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:76:46\n\n  73   }\n  74 }\n  75 \n→ 76 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: new Date(\"Invalid Date\")\n                     ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `created_at`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:33:07.727Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:76:46\n\n  73   }\n  74 }\n  75 \n→ 76 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: \"2024-03-21\"\n                     ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `created_at`: premature end of input. Expected ISO-8601 DateTime.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:40:08.615Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:76:46\n\n  73   }\n  74 }\n  75 \n→ 76 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: \"2024-03-21\"\n                     ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `created_at`: premature end of input. Expected ISO-8601 DateTime.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T06:40:13.817Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:78:46\n\n  75   };\n  76 }\n  77 \n→ 78 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: {\n           gte: new Date(\"Invalid Date\"),\n                ~~~~~~~~~~~~~~~~~~~~~~~~\n           lte: new Date(\"Invalid Date\")\n         }\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T07:21:54.518Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:78:46\n\n  75   };\n  76 }\n  77 \n→ 78 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: {\n           gte: new Date(\"Invalid Date\"),\n                ~~~~~~~~~~~~~~~~~~~~~~~~\n           lte: new Date(\"Invalid Date\")\n         }\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T07:21:58.604Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:78:46\n\n  75   };\n  76 }\n  77 \n→ 78 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: {\n           gte: new Date(\"Invalid Date\"),\n                ~~~~~~~~~~~~~~~~~~~~~~~~\n           lte: new Date(\"Invalid Date\")\n         }\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T07:22:15.562Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:78:46\n\n  75   };\n  76 }\n  77 \n→ 78 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: {\n           gte: new Date(\"Invalid Date\"),\n                ~~~~~~~~~~~~~~~~~~~~~~~~\n           lte: new Date(\"Invalid Date\")\n         }\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T07:22:38.183Z"}
{"level":"error","message":"\nInvalid `prisma.audit_trails.findMany()` invocation in\n/home/sanjiv/JuidcoFinance/backend/src/component/juidcoFinance/auditTrail/auditTrail.ts:78:46\n\n  75   };\n  76 }\n  77 \n→ 78 const data = await prisma.audit_trails.findMany({\n       take: 10,\n       skip: 0,\n       where: {\n         created_at: {\n           gte: new Date(\"Invalid Date\"),\n                ~~~~~~~~~~~~~~~~~~~~~~~~\n           lte: new Date(\"Invalid Date\")\n         }\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date.","metaData":{"action":"GET","apiId":"4801","version":"1.0"},"service":"user-service","timestamp":"2024-03-21T07:22:55.727Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:04:32.008Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:05:20.974Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:05:55.892Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:07:04.271Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:07:38.191Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:09:09.585Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:10:07.083Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:10:34.940Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:11:05.518Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:15:25.882Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:21:28.495Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:33:10.688Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:41:09.009Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:41:50.753Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:42:58.633Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:43:19.778Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:45:08.861Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:46:06.772Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:46:44.852Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T10:47:21.163Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:00:38.307Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:01:00.379Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:03:19.978Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:04:06.895Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:07:10.600Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:08:20.305Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:12:41.431Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:12:50.407Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:14:50.290Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T11:15:17.651Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:27:36.838Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:33:16.941Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:33:39.783Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:34:04.490Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:34:23.193Z"}
{"level":"error","message":{"metaData":{"action":"Authentication","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:53:29.544Z"}
{"level":"error","message":{"metaData":{"action":"Authentication","apiId":"2201","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:55:57.869Z"}
{"level":"error","message":{"metaData":{"action":"Authentication","apiId":"2201","version":"1.0"}},"service":"user-service","timestamp":"2024-03-21T12:57:00.219Z"}
